# Basic commands
 
------------------------------------------------------------------------------------------
ls                      - List files and directories in the current directory.

# Options
ls -a                   - Show all files, including hidden files (starting with .)
ls -l                   - Display detailed information (permissions, size, owner, etc.)
ls -h                   - Show file sizes in a human-readable format (e.g., KB, MB)
ls -r                   - List files in reverse order
ls -t                   - Sort files by modification time, newest first
ls -S                   - Sort files by size, largest first

# Combining Options
ls -lh                  - List detailed information with human-readable file sizes
ls -lt                  - List detailed information sorted by modification time
ls -ltr                 - List detailed information sorted by modification time (oldest first)

# Specifying Directories
ls /path/to/dir         - List files in the specified directory
ls ../                  - List files in the parent directory

# Recursive Listing
ls -R                   - List files in all subdirectories

# Filtering
ls *.txt                - List all files with the .txt extension
ls file*                - List all files starting with "file"

------------------------------------------------------------------------------------------

cd /path/to/directory    - Change to the specified directory.
cd                       - Change to the home directory (default location).

# Relative Paths
cd ..                    - Move up one directory (to the parent directory)(to go backward)
cd ../..                 - Move up two directories.
cd ./                    - Stay in the current directory (useful for clarity in scripts).

# Shortcuts
cd -                     - Switch to the previous directory you were in.

# Tab Completion
cd doc<Tab>              - Use Tab key to autocomplete directory names (e.g., "Documents").

# Error Handling
cd non_existing_dir      - If the directory doesn't exist, you'll see an error: "No such file or directory."


------------------------------------------------------------------------------------------

pwd - print working directory

------------------------------------------------------------------------------------------

mkdir - make directory

mkdir directory_name         - Create a new directory.
mkdir dir1 dir2 dir3          - Create multiple directories at once.
mkdir -p /path/to/dir         - Create parent directories as needed (no error if they already exist).

#ex
mkdir -p projects/demo       - Create 'projects' and 'demo' directories if they don’t exist.


------------------------------------------------------------------------------------------

rmdir directory_name          - Remove an empty directory.
rmdir -p /path/to/dir         - Remove the directory and its empty parent directories.

# Examples:
rmdir temp                   - Remove the 'temp' directory (if empty).
rmdir -p projects/demo       - Remove 'demo' and then 'projects' (if they are empty).



# Deleting a Non-Empty Folder
rm -r folder_name             - Deletes the folder and all its contents (files and subdirectories) recursively.

# Force Delete 
rm -rf folder_name            - Forcefully deletes the folder and its contents.

------------------------------------------------------------------------------------------


# touch Command
touch file_name                 - Create an empty file or update the timestamp of an existing file.

# Examples:
touch myfile.txt                - Create a new file named 'myfile.txt' if it doesn’t exist.
touch file1.txt file2.txt       - Create multiple files at once.
touch /path/to/file.txt         - Create a file at a specific location.

# Update Timestamps
touch existing_file.txt         - Update the access and modification times of 'existing_file.txt' to the current time.

# Set a Specific Timestamp
touch -t YYYYMMDDhhmm file.txt  - Set a custom timestamp for the file.
Example:
touch -t 202502061200 file.txt  - Set the file's timestamp to February 6, 2025, at 12:00 PM.

# Create Multiple Empty Files
touch file{1..5}.txt            - Create 'file1.txt', 'file2.txt', ..., 'file5.txt' using brace expansion.

# Notes:
- If the file already exists, `touch` does not modify its contents, only its timestamps.

# Check the Timestamp
ls -l file.txt                  - Use `ls -l` to check the updated timestamp of the file.


------------------------------------------------------------------------------------------

